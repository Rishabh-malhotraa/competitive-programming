judge,problem,name,difficulty,theme,solution,date,ext
"code-jam","2019-qualification-round-foregone-solution","none","easy","ad-hoc","none","10/Mar/2020",".py"
"codeforces","1033-A","none","none","ad-hoc","none","none",".cpp"
"codeforces","1041-D","none","hard","techniques > two pointers","none","09/Jan/2020",".cpp"
"codeforces","1092-B","none","easy","greedy","none","17/Feb/2020",".cpp"
"codeforces","1092-D1","none","medium","math > ad-hoc > finding pattern","remove adjacent ones whose absolute difference is even (using a stack)","09/Mar/2020",".cpp"
"codeforces","110-A","none","easy","ad-hoc > implementation","none","03/Dec/2019",".cpp"
"codeforces","1220-A","none","easy","ad-hoc","none","17/Feb/2020",".cpp"
"codeforces","1254-A","none","medium","ad-hoc > implementation","none","25/Nov/2019",".cpp"
"codeforces","1255-A","none","easy","greedy > coin change (CC)","none","25/Nov/2019",".cpp"
"codeforces","1284-A","none","easy","ad-hoc > implementation","none","04/Jan/2020",".cpp"
"codeforces","1284-B","none","medium","searching > binary search","none","05/Jan/2020",".cpp"
"codeforces","1285-A","none","easy","ad-hoc","none","10/Jan/2020",".cpp"
"codeforces","1285-B","none","easy","dynamic programming > max 1D range sum > kadane","none","10/Jan/2020",".cpp"
"codeforces","1296-C","none","medium","ad-hoc > implementation","maps each position of the robot with the string index, and check if a new position has already been mapped before","02/Mar/2020",".cpp"
"codeforces","1324-A","none","easy","math > ad-hoc > finding pattern","none","12/Mar/2020",".cpp"
"codeforces","1324-B","given a sequence of integers, is there a subsequence palindrome of size 3?","easy","greedy","check if there are two equal non-adjacent numbers using brute force","14/Mar/2020",".cpp"
"codeforces","1324-C","none","easy","greedy","note that it's unnecessary jump to the left, so to minimize d, just jump between the nearest 'R' cells","15/Mar/2020",".cpp"
"codeforces","1324-D","given the A and B arrays, count the quantity of pairs i < j such that A[i]+A[j] > B[i]+B[j]","medium","searching > binary search","diff being the A-B array, count, for all i in [0 .. N-2], how many times -diff[i] < diff[j], for all j in [i+1 .. N-1]","15/Mar/2020",".cpp"
"codeforces","151-A","none","easy","ad-hoc","none","03/Dec/2019",".cpp"
"codeforces","157-B","none","none","computational geometry","none","none",".cpp"
"codeforces","158-C","none","easy","ad-hoc > implementation","none","09/Mar/2020",".cpp"
"codeforces","166-E","none","medium","dynamic programming","none","02/Feb/2020",".cpp"
"codeforces","17-A","none","none","math > number theory > prime numbers > sieve of eratosthenes","none","none",".cpp"
"codeforces","266-A","none","easy","ad-hoc > implementation","none","03/Dec/2019",".cpp"
"codeforces","275-C","none","easy","greedy","none","05/Jan/2020",".cpp"
"codeforces","279-B","none","medium","techniques > two pointers","none","29/Dec/2019",".cpp"
"codeforces","313-B","none","none","greedy > maximum subsequence","none","none",".cpp"
"codeforces","339-D","none","easy","searching > segment tree","none","07/Dec/2019",".cpp"
"codeforces","37-A","none","easy","ad-hoc","none","02/Mar/2020",".cpp"
"codeforces","373-A","none","easy","ad-hoc > implementation","none","27/Dec/2019",".cpp"
"codeforces","381-A","none","easy","techniques > two pointers","none","09/Jan/2020",".cpp"
"codeforces","460-C","none","hard","searching > binary search > on answer","none","06/Jan/2020",".cpp"
"codeforces","492-B","none","easy","ad-hoc > implementation","none","29/Dec/2019",".cpp"
"codeforces","519-C","none","medium","ad-hoc > implementation","none","24/Dec/2019",".cpp"
"codeforces","545-D","none","easy","greedy","none","16/Mar/2020",".cpp"
"codeforces","576-A","none","medium","math > number theory > prime numbers > sieve of eratosthenes","none","26/Dec/2019",".cpp"
"codeforces","6-C","none","easy","techniques > two pointers","none","09/Jan/2020",".cpp"
"codeforces","624-A","none","none","math > number theory","none","none",".cpp"
"codeforces","659-D","none","easy","computational geometry","none","23/Dec/2019",".cpp"
"codeforces","676-C","none","medium","techniques > two pointers","none","07/Jan/2020",".cpp"
"codeforces","686-A","none","none","ad-hoc","none","none",".cpp"
"codeforces","702-A","none","none","greedy > maximum subsequence","none","none",".cpp"
"codeforces","81-A","none","easy","ad-hoc > implementation","none","09/Mar/2020",".cpp"
"codeforces","811-B","none","easy","ad-hoc > implementation","none","26/Dec/2019",".cpp"
"codeforces","822-A","none","easy","math > number theory > greatest common divisor (GCD)","none","07/Jan/2020",".cpp"
"codeforces","844-B","none","easy","math > combinatorics > binomial coefficient","none","27/Dec/2019",".cpp"
"codeforces","854-A","given n, determine maximum possible proper (a < b) and irreducible fraction a/b such that a+b == n","easy","math > number theory > greatest common divisor (GCD)","none","26/Dec/2019",".cpp"
"codeforces","902-B","none","none","graphs > traversal > depth-first search (DFS)","none","none",".cpp"
"codeforces","984-A","none","easy","greedy","none","02/Mar/2020",".cpp"
"codeforces","996-A","none","none","greedy > coin change (CC)","none","none",".cpp"
"spoj","ADAQUEUE","none","easy","ad-hoc","none","02/Mar/2020",".cpp"
"spoj","AE00","none","none","math > number theory","none","none",".cpp"
"spoj","AMR11E","print the n-th number that has at least 3 distinct prime factors","easy","math > number theory > prime numbers > sieve of eratosthenes","none","14/Nov/2019",".cpp"
"spoj","AMR12D","none","none","string processing > palindrome","none","none",".cpp"
"spoj","BTCK","none","none","brute force > recursive backtracking","none","none",".cpp"
"spoj","BUSYMAN","none","none","greedy","none","none",".cpp"
"spoj","CADYDIST","none","easy","greedy","none","21/Feb/2020",".cpp"
"spoj","EC_CONB","none","easy","ad-hoc","none","21/Feb/2020",".cpp"
"spoj","EDIST","none","none","dynamic programming > edit distance","none","none",".cpp"
"spoj","EIGHTS","none","easy","math > ad-hoc > finding pattern","none","21/Feb/2020",".cpp"
"spoj","GNY07D","none","easy","ad-hoc > implementation","none","21/Feb/2020",".cpp"
"spoj","KNAPSACK","none","easy","dynamic programming > 0-1 knapsack","none","22/Oct/2019",".cpp"
"spoj","MAXSUMSU","none","easy","dynamic programming > max 1D range sum > kadane","none","10/Jan/2020",".cpp"
"spoj","MBINGO","none","none","ad-hoc","none","none",".cpp"
"spoj","ONP","transform the algebraic expression with brackets into reverse polish notation (RPN) ","easy","graphs > specials > tree traversal","consider the given expression as the in-order traversal in a binary tree, then print post-order traversal recursively without building the tree","04/Mar/2020",".cpp"
"spoj","PAIRS1","given the A array, count the quantity of pairs i < j such that A[i]-A[j] == K","easy","searching > binary search","search on the sorted array A by the A[n]+K, for all n in [0 .. N-1]","02/Mar/2020",".cpp"
"spoj","PL","none","none","greedy","none","none",".cpp"
"spoj","PRIME1","print all primes p in [m .. n], 0 <= m <= n <= 10^9, n-m <= 10^5","medium","math > number theory > prime numbers > sieve of eratosthenes","sieve + prime checking","17/Mar/2020",".cpp"
"spoj","PRIONPRI","prime checking","easy","math > number theory > prime numbers","none","14/Nov/2019",".cpp"
"spoj","SBANK","none","easy","ad-hoc","none","02/Mar/2020",".cpp"
"spoj","SPIKES","none","none","brute force > recursive backtracking","none","none",".cpp"
"spoj","STACKEZ","none","none","ad-hoc","none","none",".cpp"
"spoj","STPAR","none","none","greedy","none","none",".cpp"
"spoj","TESSER","none","none","string processing","none","none",".cpp"
"uri","1026","none","none","ad-hoc","none","none",".cpp"
"uri","1028","none","none","math > number theory > greatest common divisor (GCD)","none","none",".cpp"
"uri","1055","none","medium","greedy > loading balance","none","24/Jan/2020",".cpp"
"uri","1063","none","none","ad-hoc","none","none",".cpp"
"uri","1068","none","none","ad-hoc","none","none",".cpp"
"uri","1069","none","none","ad-hoc","none","none",".cpp"
"uri","1076","none","none","graphs","none","05/May/2019",".cpp"
"uri","1077","none","none","ad-hoc","none","none",".cpp"
"uri","1086","none","none","greedy","none","none",".cpp"
"uri","1091","none","none","ad-hoc","none","none",".cpp"
"uri","1110","none","none","ad-hoc","none","none",".cpp"
"uri","1123","none","medium","graphs > shortest path > dijkstra","none","22/May/2019",".cpp"
"uri","1127","none","none","string processing > knuth-morris-pratt (KMP)","none","none",".cpp"
"uri","1148","none","none","graphs > shortest path > dijkstra","none","none",".cpp"
"uri","1194","none","none","graphs > binary search tree (BST)","none","none",".cpp"
"uri","1195","none","none","graphs > binary search tree (BST)","none","none",".cpp"
"uri","1200","none","none","graphs > binary search tree (BST)","none","none",".cpp"
"uri","1203","check if any subset of A has a sum equal to K","easy","dynamic programming > 0-1 knapsack > subset sum","none","07/Feb/2020",".cpp"
"uri","1215","none","none","graphs > binary search tree (BST)","none","none",".cpp"
"uri","1217","none","none","ad-hoc","none","none",".cpp"
"uri","1253","none","none","ad-hoc","none","none",".cpp"
"uri","1271","none","none","ad-hoc","none","none",".cpp"
"uri","1285","none","none","ad-hoc","none","none",".cpp"
"uri","1300","none","none","ad-hoc","none","none",".cpp"
"uri","1318","none","none","ad-hoc","none","none",".cpp"
"uri","1322","none","none","graphs > traversal > depth-first search (DFS)","none","none",".cpp"
"uri","1323","none","none","math > number theory","none","none",".cpp"
"uri","1340","none","none","ad-hoc","none","none",".cpp"
"uri","1342","none","none","ad-hoc","none","none",".cpp"
"uri","1368","none","hard","ad-hoc","none","22/Jun/2019",".cpp"
"uri","1438","none","none","ad-hoc","none","none",".cpp"
"uri","1487","none","medium","dynamic programming > 0-1 knapsack","none","25/Aug/2019",".cpp"
"uri","1517","none","medium","dynamic programming > longest increasing subsequence (LIS)","none","23/Jan/2020",".cpp"
"uri","1522","none","none","brute force > recursive backtracking","none","none",".cpp"
"uri","1548","none","none","ad-hoc","none","none",".cpp"
"uri","1694","none","none","math > combinatorics > binomial coefficient","none","none",".cpp"
"uri","1707","none","none","dynamic programming > digits","none","none",".cpp"
"uri","1715","none","none","ad-hoc","none","none",".cpp"
"uri","1766","none","none","ad-hoc","none","none",".cpp"
"uri","1799","none","none","graphs > traversal > breadth-first search (BFS)","none","none",".cpp"
"uri","1901","none","none","ad-hoc","none","none",".cpp"
"uri","2065","none","none","ad-hoc","none","none",".cpp"
"uri","2242","none","easy","ad-hoc","none","16/Mar/2019",".cpp"
"uri","2246","none","none","ad-hoc","none","none",".cpp"
"uri","2291","print n-th divine number, the one that is equal to the sum of the sum of each divisor from 1 to n","medium","math > number theory","none","28/May/2019",".cpp"
"uri","2294","none","none","graphs > traversal > breadth-first search (BFS)","none","none",".cpp"
"uri","2345","none","none","ad-hoc","none","none",".cpp"
"uri","2372","none","easy","graphs > shortest path > floyd-warshall","none","25/Oct/2019",".cpp"
"uri","2448","none","none","searching > binary search","none","none",".cpp"
"uri","2465","none","none","ad-hoc","none","none",".cpp"
"uri","2498","none","easy","dynamic programming > 0-1 knapsack","none","09/Sep/2019",".cpp"
"uri","2566","none","none","graphs > shortest path > dijkstra","none","none",".cpp"
"uri","2658","none","medium","searching > segment tree > lazy propagation","build a segment tree for RSQ, but store an array of size 9 in tree[v], where tree[v][n] indicates the frequency that each note n appears in that interval","13/Mar/2020",".cpp"
"uri","2661","compute the number of divisors of n that can be written as the product of two or more distinct prime numbers (without repetition), 1 <= n <= 10^12","hard","math > number theory > prime numbers > factorization","note that the product of any combination of prime factors of a number will always be a divisor of that number","14/Sep/2019",".cpp"
"uri","2663","none","none","ad-hoc","none","none",".cpp"
"uri","2879","none","easy","ad-hoc","none","23/Feb/2019",".cpp"
"uri","2880","none","none","ad-hoc","none","none",".cpp"
"uri","2884","none","easy","ad-hoc","none","28/Feb/2019",".cpp"
"uri","2963","none","easy","ad-hoc","none","14/Sep/2019",".cpp"
"uri","2965","none","medium","graphs > traversal > depth-first search (DFS)","none","28/Oct/2019",".cpp"
"uri","2968","none","easy","ad-hoc","none","14/Sep/2019",".cpp"
"uri","2971","none","medium","ad-hoc > simulation","none","19/Sep/2019",".cpp"
"uri","2972","calculate the sum of C(N, k)%2 for all k in [0 .. n], i.e., how many odd combinations of k heads between n coins there are","hard","math > combinatorics > binomial coefficient","2^qtyBitsOn(n)","02/Jan/2020",".cpp"
"uri","2973","none","medium","searching > binary search > on answer","none","03/Jan/2020",".cpp"
"uri","3024","none","easy","ad-hoc","none","09/Nov/2019",".cpp"
"uva","10003","none","easy","dynamic programming","none","25/Jan/2020",".cpp"
"uva","10004","none","easy","graphs > traversal > bipartite checking","none","31/Jan/2020",".cpp"
"uva","10034","none","easy","graphs > minimum spanning tree (MST)","none","10/Nov/2019",".cpp"
"uva","10042","none","easy","math > number theory > prime numbers > factorization","none","13/Feb/2020",".cpp"
"uva","10131","none","medium","dynamic programming > longest increasing subsequence (LIS)","sort elephants based on increasing kg, then apply LDS on iq","25/Jan/2020",".cpp"
"uva","10141","none","easy","ad-hoc","none","17/Feb/2020",".cpp"
"uva","10161","none","medium","math > ad-hoc > finding pattern","none","15/Feb/2020",".cpp"
"uva","10310","none","none","computational geometry","none","none",".cpp"
"uva","10334","none","medium","math > combinatorics > fibonacci numbers","compute (n+2)-th fibonnaci number","19/Feb/2020",".py"
"uva","10337","none","easy","dynamic programming","none","29/Jan/2020",".cpp"
"uva","10344","check if some arithmetic expression of 5 given numbers will result in 23 ","easy","brute force > recursive backtraking","check all combination of operators for each permutation of the given numbers ","19/Mar/2020",".cpp"
"uva","10346","none","easy","math > ad-hoc","none","14/Feb/2020",".cpp"
"uva","10360","none","easy","brute force > iterative","none","13/Jan/2020",".cpp"
"uva","10382","none","medium","greedy > interval covering","reduce the problem using pythagoras to one line","15/Jan/2020",".cpp"
"uva","10405","none","none","dynamic programming > longest common subsequence (LCS)","none","none",".cpp"
"uva","10496","none","easy","dynamic programming > traveling salesman problem (TSP)","none","24/Jan/2020",".cpp"
"uva","10539","compute the quantity of non-prime numbers in [lo .. hi] which are divisible by only a single prime number, 0 < lo <= hi < 10^12","medium","math > number theory > prime numbers > sieve of eratosthenes","generate all powers of the primes","18/Mar/2020",".cpp"
"uva","10616","none","medium","dynamic programming > 0-1 knapsack > subset sum","none","24/Jan/2020",".cpp"
"uva","10651","none","medium","dynamic programming","use bitmasks","08/Feb/2020",".cpp"
"uva","10684","none","easy","dynamic programming > max 1D range sum > kadane","none","17/Jan/2020",".cpp"
"uva","10721","none","medium","dynamic programming","none","29/Jan/2020",".cpp"
"uva","10755","max 3D range sum","hard","dynamic programming > max 2D range sum","use max 2D range sum in two of the three dimensions and max 1D range sum (kadane) on the third dimension","18/Jan/2020",".cpp"
"uva","108","none","easy","dynamic programming > max 2D range sum","none","17/Jan/2020",".cpp"
"uva","10806","find the global shortest path from 0 to V-1 (round trip), without repeting edges","medium","graphs > shortest path > dijkstra","none","23/Feb/2020",".cpp"
"uva","10812","none","easy","math > ad-hoc","none","17/Feb/2020",".cpp"
"uva","10943","none","easy","dynamic programming","none","25/Jan/2020",".cpp"
"uva","10954","none","none","ad-hoc","none","none",".cpp"
"uva","1103","none","hard","graphs > traversal > flood fill","consider each pixel as a vertex of an implicit graph, then identify each hieroglyph counting the number of white CCs within it","01/Feb/2020",".cpp"
"uva","11060","none","easy","graphs > traversal > topological sorting","none","31/Jan/2020",".cpp"
"uva","11094","none","easy","graphs > traversal > flood fill","none","31/Jan/2020",".cpp"
"uva","11137","none","easy","dynamic programming > coin change (CC) > counting ways","none","21/Feb/2020",".cpp"
"uva","11195","none","medium","brute force > recursive backtracking > n-queens","use bitmasks","12/Jan/2020",".cpp"
"uva","11254","none","medium","math > ad-hoc > arithmetic progression","none","14/Feb/2020",".cpp"
"uva","11292","none","easy","greedy > bipartite matching","none","15/Jan/2020",".cpp"
"uva","11367","none","hard","graphs > shortest path > dijkstra","find the shortest path on space-state graph, where each vertex represent a city and a level of car fuel","25/Feb/2020",".cpp"
"uva","11389","none","easy","greedy > loading balance","none","16/Jan/2020",".cpp"
"uva","11402","none","medium","searching > segment tree > lazy propagation","build a segment tree for RSQ, but keep in lazy[v] the type of pending operation to be performed in that interval of A","12/Mar/2020",".cpp"
"uva","11450","none","easy","dynamic programming","none","16/Jan/2020",".cpp"
"uva","11456","none","medium","dynamic programming > longest increasing subsequence (LIS)","find the max(lis[i]+lds[i]-1) for all i in [0 .. N-1], being i where the subsequence starts","01/Mar/2020",".cpp"
"uva","11504","count the number of SCCs without incoming edge from a vertex of another SCC","medium","graphs > traversal > strongly connected components (SCC)","none","07/Feb/2020",".cpp"
"uva","116","none","medium","dynamic programming > traveling salesman problem (TSP)","none","14/Nov/2019",".cpp"
"uva","11718","none","hard","math > ad-hoc > finding pattern","compute K * N^(K-1) * sumA using fast power mod","16/Feb/2020",".cpp"
"uva","11723","none","easy","math > ad-hoc","none","14/Feb/2020",".cpp"
"uva","11799","none","easy","ad-hoc","none","17/Feb/2020",".cpp"
"uva","11831","none","easy","graphs > traversal","consider grid as an implicit graph and walk through it, or just rotate the robot, for each received instruction","27/Feb/2020",".cpp"
"uva","11875","none","easy","math > ad-hoc","none","14/Feb/2020",".cpp"
"uva","11906","none","medium","graphs > traversal","consider grid as an implicit graph and walk through it avoiding redundant positions (nr, nc)","28/Feb/2020",".cpp"
"uva","12015","none","easy","ad-hoc","none","17/Feb/2020",".cpp"
"uva","12097","none","medium","searching > binary search > on answer","none","29/Dec/2019",".cpp"
"uva","12442","given a graph with all vertices with out-degree 1, find the vertice that reaches the most vertices","medium","graphs > traversal","none","29/Feb/2020",".cpp"
"uva","12455","none","easy","brute force > iterative > all subsets","use bitmasks","11/Jan/2020",".cpp"
"uva","12484","none","none","dynamic programming > minimax","none","none",".cpp"
"uva","264","none","medium","math > ad-hoc > finding pattern","none","18/Feb/2020",".cpp"
"uva","443","none","medium","math > ad-hoc > sequences","none","18/Feb/2020",".cpp"
"uva","481","none","medium","greedy > fast longest increasing subsequence (LIS)","none","22/Jan/2020",".cpp"
"uva","524","none","medium","brute force > recursive backtracking > pruned permutations","none","13/Jan/2020",".cpp"
"uva","674","none","easy","dynamic programming > coin change (CC) > counting ways","none","23/Jan/2020",".cpp"
"uva","725","none","easy","brute force > iterative","none","11/Jan/2020",".cpp"
"uva","750","none","easy","brute force > iterative > all permutations","none","12/Jan/2020",".cpp"
"uva","787","max 1D range product query","medium","dynamic programming > max 1D range sum","compute for each sub-range without 0","20/Feb/2020",".py"
"uva","796","none","easy","graphs > traversal > bridges and articulation points","none","04/Feb/2020",".cpp"
